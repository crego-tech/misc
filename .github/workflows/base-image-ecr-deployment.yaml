name: "Build & Push Multiarch Base Image"

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: "Select Dockerfile to build"
        required: true
        type: choice
        default: "Dockerfile-Py3.13"
        options:
          - "Dockerfile-Py3.13"
          - "Dockerfile-Py3.12"
          - "Dockerfile-Py3.11"
      environment:
        description: "Choose the environment"
        required: true
        type: choice
        default: "non-prod"
        options:
          - "prod"
          - "non-prod"
      ecr_repo_name:
        description: "ECR repository name"
        required: true
        default: "crego-omni/base-image"
      image_tag:
        description: "Tag for the image (e.g., python3.13-multiarch)"
        required: true
        default: "python3.13-multiarch"
      platforms:
        description: "Target platforms"
        required: true
        type: choice
        default: "linux/amd64,linux/arm64"
        options:
          - "linux/amd64,linux/arm64"
          - "linux/amd64"
          - "linux/arm64"

env:
  AWS_REGION: ap-south-1

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set AWS Account ID based on environment
        id: resolve-account
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "prod" ]]; then
            echo "AWS_ACCOUNT_ID=${{ secrets.PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          else
            echo "AWS_ACCOUNT_ID=${{ secrets.NON_PROD_AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Set ECR Repository URI
        run: |
          echo "ECR_REPO_URI=public.ecr.aws/r8g6r3v1/base-image/python3.13" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/Github-crego-omni-assume-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region ap-south-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names ${{ github.event.inputs.ecr_repo_name }} || \
          aws ecr create-repository --repository-name ${{ github.event.inputs.ecr_repo_name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Multiarch Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ github.event.inputs.dockerfile }}
          platforms: ${{ github.event.inputs.platforms }}
          push: true
          tags: |
            ${{ env.ECR_REPO_URI }}:latest
            ${{ env.ECR_REPO_URI }}:${{ github.event.inputs.image_tag }}
